    Chose usb at boot option
    At menu, on highlight "install ubuntu", press E
    At the end of line starting with linux, insert nomodeset
    During install, check box about secureboot, set password.
    Finish install and restart.
    During booting, computer ask to modify secure boot, press any key to do so
    Chose turn off secureboot and set password letter (followed by enter) as prompted
    
    Once on ubuntu desktop
    
    2  sudo apt-get install nvidia-xxx
    To know which version to install, go to menu, software updater -> settings -> additional drivers -> pick nvidia version proprietary and tested
    3  sudo reboot
    5  sudo apt-get install linux-headers-$(uname -r)
    
    download cuda from official website
    
    8  sudo dpkg -i cuda-repo-ubuntu1604-8-0-local_8.0.44-1_amd64.deb 
    9  sudo apt-get update
   10  sudo apt-get install cuda
   11  export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
   12  export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64\ ${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
   13  cd /usr/local/cuda-8.0/lib64
   16  cd samples/
   17  sudo make
   22  cd 1_Utilities/
   25  cd deviceQuery
   36  ./deviceQuery
   
   Test devicequery should pass
   To print more GPU info :
   
   37  nvidia-smi 
   put in .bashrc 
   export PATH=/usr/local/cuda-8.0/bin:$PATH
   38  ncvv -v
   
   To install Cudnn, go to offical website and download, unzip, and go to the unzipped folder
   Copy files there :
   
   57  sudo cp -P lib64/libcudnn* /usr/local/cuda-8.0/lib64
   62  sudo cp -P include/cudnn.h /usr/local/cuda-8.0/include
   64  cd /usr/local/cuda-8.0/
   72  sudo chmod a+r lib64/libcudnn*

   Config github account (skip if done alrdy)
   First make ssh key
   
   91  ssh-keygen -t rsa -b 4096 -C "jeanbenoit.delbrouck@gmail.com"
   92  eval "$(ssh-agent -s)"
   93  ssh-add ~/.ssh/id_rsa
   84  sudo apt install git
   94  git config --global user.name "jbdel"
   95  git config --global user.email jeanbenoit.delbrouck@gmail.com   

   The go to .ssh folder (ctrl+h to show) and copy content of id_rsa.pub and past it in github website (parameters > ssh)
   
   To install cafe
   
   42  sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler 
   43  sudo apt-get install --no-install-recommends libboost-all-dev
   82  sudo apt-get install libatlas-base-dev
   83  sudo apt-get install python-opencv
   84  sudo apt-get install libgoogle-glog-dev

  125  sudo find . -type f -exec sed -i -e 's^"hdf5.h"^"hdf5/serial/hdf5.h"^g' -e 's^"hdf5_hl.h"^"hdf5/serial/hdf5_hl.h"^g' '{}' \;
  123  cd /usr/lib/x86_64-linux-gnu/
  133  sudo ln -s libhdf5_serial.so.10.1.0 libhdf5.so
  134  sudo ln -s libhdf5_serial_hl.so.10.0.2 libhdf5_hl.so 

 Â  87  cd ~
   96  git clone git@github.com:BVLC/caffe.git
   
   To clone specific branch: 
   
   97  git clone -b branch_name git@github.com:BVLC/caffe.git   
   
  116  cd caffe
  
  Now fill in Makefile.config.example accordingly. What i did:
    - Uncomment use_cudnn line
    - add /usr/include/hdf5/serial/ to INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include 
    - Uncomment line WITH_PYTHON_LAYER := 1
    - Checking cuda-dir is right
    - Checking python_include is right
    - Changing anaconda_home if you use it
    - Uncomment required lines to use Python 3 (default is Python 2)
    
  117  cp Makefile.config.example Makefile.config
  119  make all
  137  make all
  138  make test
  139  make runtest
  
  should do 100% success
  
  180  sudo apt-get install python-skimage
  181  sudo apt-get install python-pip
  182  sudo pip install protobuf
  183  make pycaffe
  
  Then add export PYTHONPATH=/path/to/caffe/python:$PYTHONPATH to your .bashrc

####### TENSORFLOW

  333  sudo  pip install tensorflow-gpu
  then add to your bashrc : 
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64:/usr/local/cuda-8.0/extras/CUPTI/lib64"
  export CUDA_HOME=/usr/local/cuda-8.0
  
  To see if it works :
  
  Open a terminal and type the following:

    $ python
    ...
    >>> import tensorflow as tf
    >>> hello = tf.constant('Hello, TensorFlow!')
    >>> sess = tf.Session()
    >>> print(sess.run(hello))
    Hello, TensorFlow!
    >>> a = tf.constant(10)
    >>> b = tf.constant(32)
    >>> print(sess.run(a + b))
    42
    >>>
    
   easy :-)


usefull links
https://github.com/BVLC/caffe/wiki/Ubuntu-16.04-or-15.10-Installation-Guide
http://caffe.berkeleyvision.org/installation.html
